#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

int is_prime(int n);
void generate_fibonacci(int n);

int main()
{
    pid_t pid;
    int n;

    printf("Enter a positive integer: ");
    scanf("%d", &n);

    pid = fork();

    if (pid == 0) {
        // child process
        generate_fibonacci(n);
    } else if (pid > 0) {
        // parent process
        int status;
        wait(&status);
        printf("Prime numbers: ");
        for (int i = 2; i <= n; i++) {
            if (is_prime(i)) {
                printf("%d ", i);
            }
        }
        printf("\n");
    } else {
        printf("Fork failed\n");
        exit(1);
    }

    return 0;
}

int is_prime(int n)
{
    if (n <= 1) {
        return 0;
    }
    for (int i = 2; i <= n/2; i++) {
        if (n % i == 0) {
            return 0;
        }
    }
    return 1;
}

void generate_fibonacci(int n)
{
    int first = 0, second = 1, next;
    printf("Fibonacci series: ");
    for (int i = 1; i <= n; i++) {
        printf("%d ", first);
        next = first + second;
        first = second;
        second = next;
    }
    printf("\n");
}
